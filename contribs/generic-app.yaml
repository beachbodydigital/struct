structure:
  - README.md:
      content: |
        # Generic App

        This is a generic app that can be used as a starting point for new projects.
  - .gitignore:
      content: |
        # Ignore files generated by the app
        /node_modules
        /dist
  - .tf/states/environments/dev/main.tf:
      content: "# Terraform configuration for the dev environment"
  - .tf/states/environments/dev/providers.tf:
      content: |
        provider "aws" {
          region = "${ aws_region }"
        }
  - .tf/states/environments/prod/main.tf:
      content: "# Terraform configuration for the prod environment"
  - .tf/states/environments/prod/providers.tf:
      content: |
        provider "aws" {
          region = "${ aws_region }"
        }
  - .tf/states/environments/stage/main.tf:
      content: "# Terraform configuration for the stage environment"
  - .tf/states/environments/stage/providers.tf:
      content: |
        provider "aws" {
          region = "${ aws_region }"
        }
  - .tf/states/environments/qa/main.tf:
      content: "# Terraform configuration for the qa environment"
  - .tf/states/environments/qa/providers.tf:
      content: |
        provider "aws" {
          region = "${ aws_region }"
        }
  - .tf/states/init/main.tf:
      content: "# Terraform configuration for the init environment"
  - .tf/states/init/providers.tf:
      content: |
        provider "aws" {
          region = "${ aws_region }"
        }
  - .github/workflows/pre-commit.yaml:
      content: |
        repos:
        - repo: https://github.com/pre-commit/pre-commit-hooks
          rev: v4.6.0
          hooks:
            - id: trailing-whitespace
            - id: end-of-file-fixer
            - id: check-yaml
  - .github/workflows/ci.yaml:
      content: |
        name: CI

        on:
          push:
            branches:
              - main

        jobs:
          build:
            runs-on: ubuntu-latest

            steps:
              - name: Checkout code
                uses: actions/checkout@v2

              - name: Install dependencies
                run: npm install

              - name: Build
                run: npm run build

              - name: Test
                run: npm test

              - name: Deploy
                run: echo "Deploying to the cloud"
  - .github/CODEOWNERS:
      content: |
        # This file defines the code owners for the repository
        # See https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-code-owners

        # The owners of the repository
        *           @app-owner
        .tf/*       @devops-team
        .github/*   @devops-team
        CODEOWNERS  @devops-team
  - .pre-commit-config.yaml:
      content: |
        repos:
        - repo: https://github.com/pre-commit/pre-commit-hooks
          rev: v4.6.0
          hooks:
            - id: trailing-whitespace
            - id: end-of-file-fixer
            - id: check-yaml
  - .github/ISSUE_TEMPLATE/bug_report.md:
      file: https://raw.githubusercontent.com/bitnami/charts/main/.github/ISSUE_TEMPLATE/bug_report.yml
  - .github/ISSUE_TEMPLATE/feature_request.md:
      file: https://raw.githubusercontent.com/bitnami/charts/main/.github/ISSUE_TEMPLATE/feature_request.yml
  - .github/PULL_REQUEST_TEMPLATE.md:
      file: https://raw.githubusercontent.com/bitnami/charts/main/.github/PULL_REQUEST_TEMPLATE.md
  - .github/dependabot.yml:
      file: https://raw.githubusercontent.com/bitnami/charts/main/.github/dependabot.yml
  - Dockerfile:
      content: |
        # Use an official Node.js runtime as the base image
        FROM node:14
        # Set the working directory in the container
        WORKDIR /app
        # Copy package.json and package-lock.json
        COPY package*.json ./
        # Install Node.js dependencies
        RUN npm install
        # Copy the application code
        COPY . .
        # Expose the port the app runs on
        EXPOSE 3000
        # Run the application
        CMD ["npm", "start"]
  - .dockerignore:
      content: |
        node_modules
        npm-debug.log
  - docker-compose.yml:
      content: |
        version: '3'
        services:
          app:
            build: .
            ports:
              - "3000:3000"
            env_file:
              - .env
            volumes:
              - .:/app
            environment:
              - NODE_ENV=development
  - .env.example:
      content: |
        # Environment variables
        NODE_ENV=development
        PORT=3000
  - .env:
      content: |
        # Environment variables
        NODE_ENV=development
        PORT=3000
